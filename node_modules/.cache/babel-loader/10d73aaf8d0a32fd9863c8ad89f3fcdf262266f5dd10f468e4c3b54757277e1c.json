{"ast":null,"code":"var _jsxFileName = \"/home/shashanknadikatla/Downloads/Spring-React/React/ecommerce/src/orders/GetOrders.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetOrders = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\"http://localhost:8080/orders\");\n        setOrders(response.data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchOrders;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Orders page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(GetOrders, \"vf4BbLKXPRZrpQm4HuRBm7L7b4A=\");\n_c = GetOrders;\nexport default GetOrders;\nvar _c;\n$RefreshReg$(_c, \"GetOrders\");","map":{"version":3,"names":["axios","useEffect","useState","jsxDEV","_jsxDEV","GetOrders","_s","isLoading","setIsLoading","orders","setOrders","error","setError","fetchOrders","response","get","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shashanknadikatla/Downloads/Spring-React/React/ecommerce/src/orders/GetOrders.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Order as OrderInterface } from \"../types/Order\";\n\nconst GetOrders: React.FC = () => {\nconst [isLoading, setIsLoading] = useState<boolean>(false);\nconst [orders, setOrders] = useState<OrderInterface[]>([]);\nconst [error, setError] = useState<string | null>(null)\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(\"http://localhost:8080/orders\");\n        setOrders(response.data as OrderInterface[]);\n      } catch(error) {\n        setError((error as Error).message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchOrders\n  }, []);\n  return (\n    <div>\n      <p>Orders page</p>\n    </div>\n  );\n};\n\nexport default GetOrders;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAU,KAAK,CAAC;EAC1D,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAmB,EAAE,CAAC;EAC1D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EACrDD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BL,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,8BAA8B,CAAC;QAChEL,SAAS,CAACI,QAAQ,CAACE,IAAwB,CAAC;MAC9C,CAAC,CAAC,OAAML,KAAK,EAAE;QACbC,QAAQ,CAAED,KAAK,CAAWM,OAAO,CAAC;MACpC,CAAC,SAAS;QACRT,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDK,WAAW;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBACET,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAAc,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvBID,SAAmB;AAAAkB,EAAA,GAAnBlB,SAAmB;AAyBzB,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}